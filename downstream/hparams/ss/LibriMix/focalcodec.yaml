# ###########################################################################################
# Model: Conformer encoder
# Authors: Luca Della Libera 2025
# ###########################################################################################

experiment_name: focalcodec
dataset: LibriMix
task: ss

# Seed needs to be set at top of YAML
seed: 0
__set_seed: !apply:torch.manual_seed [!ref <seed>]

# Data preparation
data_folder: !PLACEHOLDER
train_csv: !ref <save_folder>/train-100.csv
valid_csv: !ref <save_folder>/dev.csv
test_csv: !ref <save_folder>/test.csv
splits: [train-100, dev, test]
num_speakers: 2
add_noise: False
version: wav16k/min

# Output folders
output_folder: !ref results/<task>/<dataset>/<experiment_name>/<seed>
save_folder: !ref <output_folder>/save
cache_folder: !name:huggingface_hub.constants.HUGGINGFACE_HUB_CACHE

# Save options
compute_metrics: True
save_audios: False

# Preprocessing parameters
train_remove_if_longer: 60.0  # Seconds
valid_remove_if_longer: 60.0  # Seconds
test_remove_if_longer: 60.0  # Seconds
train_remove_if_shorter: 0.0  # Seconds
valid_remove_if_shorter: 0.0  # Seconds
test_remove_if_shorter: 0.0  # Seconds
sorting: ascending
cache_size: 1.e+10

# Training parameters
num_epochs: 100
grad_accumulation_factor: 1
train_batch_size: 16
valid_batch_size: 1
test_batch_size: 1
dataloader_workers: 4
nonfinite_patience: 10
max_grad_norm: 0.01
precision: fp32
ckpt_interval_steps: 4000
keep_checkpoints: 1
augment: False
augment_prob: 0.75
use_pit: True

# Optimizer parameters
lr: 0.0001
weight_decay: 0.01
improvement_threshold: 0.0025
annealing_factor: 0.9
patient: 1

# Codec parameters
sample_rate: 16000
vocab_size: 8192
num_codebooks: 1
config: lucadellalib/focalcodec_50hz
mode: reconstruct

# Embedding parameters
embedding_dim: 13
pretrain_embeddings: True  # If True, must match the codec's embedding size
freeze_embeddings: False

# Encoder parameters
dropout: 0.1
activation: !name:torch.nn.GELU
d_model: 512
nhead: 4
num_layers: 6
d_ffn: 2048
max_length: 2048
causal: False

# Performance metrics parameters
dwer_hub: small
wavlm_sim_hub: microsoft/wavlm-base-sv
ecapatdnn_sim_hub: speechbrain/spkrec-ecapa-voxceleb

# Augmentation
drop_freq: !new:speechbrain.augment.time_domain.DropFreq
    drop_freq_low: 0  # Min frequency band dropout probability
    drop_freq_high: 1  # Max frequency band dropout probability
    drop_freq_count_low: 1  # Min number of frequency bands to drop
    drop_freq_count_high: 3  # Max number of frequency bands to drop
    drop_freq_width: 0.05  # Width of frequency bands to drop

drop_chunk: !new:speechbrain.augment.time_domain.DropChunk
    drop_length_low: 1  # Min number of audio chunks to drop
    drop_length_high: 5  # Max number of audio chunks to drop
    drop_count_low: 1000  # Min length of audio chunks to drop
    drop_count_high: 2000  # Max length of audio chunks to drop

augmentation: !new:speechbrain.augment.augmenter.Augmenter
    parallel_augment: False
    concat_original: False
    repeat_augment: 1
    shuffle_augmentations: False
    min_augmentations: 2
    max_augmentations: 2
    augment_prob: !ref <augment_prob>
    augmentations: [!ref <drop_freq>, !ref <drop_chunk>]

# Codec
codec: !new:audiocodecs.FocalCodec
    sample_rate: !ref <sample_rate>
    num_codebooks: !ref <num_codebooks>
    vocab_size: !ref <vocab_size>
    config: !ref <config>
    mode: !ref <mode>

# Modules
embedding: !new:models.multihead.MultiHeadEmbedding
    vocab_size: !ref <vocab_size>
    embedding_dim: !ref <embedding_dim>
    num_codebooks: !ref <num_codebooks>
    _freeze: !ref <freeze_embeddings>

pooling: !new:models.pooling.LinearPooling
    num_channels: !ref <num_codebooks>

encoder: !new:speechbrain.lobes.models.transformer.TransformerASR.TransformerASR
    input_size: !ref <embedding_dim>
    tgt_vocab: -1
    d_model: !ref <d_model>
    nhead: !ref <nhead>
    num_encoder_layers: !ref <num_layers>
    num_decoder_layers: 0
    d_ffn: !ref <d_ffn>
    dropout: !ref <dropout>
    activation: !ref <activation>
    max_length: !ref <max_length>
    encoder_module: conformer
    normalize_before: True
    causal: !ref <causal>

head: !new:models.multihead.MultiHeadLinear
    in_features: !ref <d_model>
    out_features: !ref <vocab_size>
    num_codebooks: !ref <num_speakers> * <num_codebooks>

modules:
    embedding: !ref <embedding>
    pooling: !ref <pooling>
    encoder: !ref <encoder>
    head: !ref <head>

model: !new:torch.nn.ModuleList
    [[!ref <embedding>,
      !ref <pooling>,
      !ref <encoder>,
      !ref <head>]]

# Loss functions
ce_loss: !name:speechbrain.nnet.losses.nll_loss
    label_smoothing: 0.0
    allowed_len_diff: 0
    reduction: mean

# Optimizers
opt_class: !name:torch.optim.AdamW
    lr: !ref <lr>
    betas: (0.9, 0.98)
    eps: 1.e-8
    weight_decay: !ref <weight_decay>

# Schedulers
scheduler: !new:speechbrain.nnet.schedulers.NewBobScheduler
    initial_value: !ref <lr>
    improvement_threshold: !ref <improvement_threshold>
    annealing_factor: !ref <annealing_factor>
    patient: !ref <patient>

# Performance metrics
ter_computer: !name:speechbrain.utils.metric_stats.MetricStats
    metric: !name:speechbrain.nnet.losses.classification_error
        reduction: batch

utmos_computer: !name:metrics.utmos.UTMOS
    sample_rate: !ref <sample_rate>

dnsmos_computer: !name:metrics.dnsmos.DNSMOS
    sample_rate: !ref <sample_rate>

stoi_computer: !name:metrics.stoi.STOI
    sample_rate: !ref <sample_rate>

pesq_computer: !name:metrics.pesq.PESQ
    sample_rate: !ref <sample_rate>

meld_computer: !name:metrics.mel_distance.MelDistance
    sample_rate: !ref <sample_rate>

stftd_computer: !name:metrics.stft_distance.STFTDistance
    sample_rate: !ref <sample_rate>

dwer_computer: !name:metrics.dwer.DWER
    model_hub: !ref <dwer_hub>
    sample_rate: !ref <sample_rate>
    save_path: !ref <cache_folder>

wavlm_sim_computer: !name:metrics.speaker_similarity.SpkSimWavLM
    model_hub: !ref <wavlm_sim_hub>
    sample_rate: !ref <sample_rate>
    save_path: !ref <cache_folder>

ecapatdnn_sim_computer: !name:metrics.speaker_similarity.SpkSimECAPATDNN
    model_hub: !ref <ecapatdnn_sim_hub>
    sample_rate: !ref <sample_rate>
    save_path: !apply:os.path.join [!ref <cache_folder>, models--speechbrain--spkrec-ecapa-voxceleb]

# Counters, checkpointers, loggers, etc.
epoch_counter: !new:speechbrain.utils.epoch_loop.EpochCounter
    limit: !ref <num_epochs>

checkpointer: !new:speechbrain.utils.checkpoints.Checkpointer
    checkpoints_dir: !ref <save_folder>
    recoverables:
        model: !ref <model>
        scheduler: !ref <scheduler>
        counter: !ref <epoch_counter>

train_logger: !new:speechbrain.utils.train_logger.FileTrainLogger
    save_file: !ref <output_folder>/train_log.txt