# ###########################################################################################
# Model: Conformer encoder-decoder
# Authors: Luca Della Libera 2024
# ###########################################################################################

experiment_name: semanticodec
dataset: LibriSpeech
task: tts

# Seed needs to be set at top of YAML
seed: 0
__set_seed: !apply:torch.manual_seed [!ref <seed>]

# Data preparation
data_folder: !PLACEHOLDER
train_csv: !ref <save_folder>/train-clean-100.csv
valid_csv: !ref <save_folder>/dev-clean.csv
test_csv: !ref <save_folder>/test-clean.csv
splits: [train-clean-100, dev-clean, test-clean]

# Output folders
output_folder: !ref results/<task>/<dataset>/<experiment_name>/<seed>
save_folder: !ref <output_folder>/save
cache_folder: !name:huggingface_hub.constants.HUGGINGFACE_HUB_CACHE

# Save options
compute_metrics: True
save_audios: False

# Preprocessing parameters
train_remove_if_longer: 10.0  # Seconds
valid_remove_if_longer: 10.0  # Seconds
test_remove_if_longer: 10.0  # Seconds
sorting: ascending
tok_cache_size: 1.e+10
spk_cache_size: 1.e+10

# Training parameters
num_epochs: 60
grad_accumulation_factor: 16
train_batch_size: 1
valid_batch_size: 1
test_batch_size: 1
dataloader_workers: 4
nonfinite_patience: 10
max_grad_norm: 0.01
precision: fp32
ckpt_interval_steps: 10000
keep_checkpoints: 1

# Special tokens
bos_id: !ref <vocab_size>
eos_id: !ref <vocab_size> + 1

# Optimizer parameters
lr: 0.0001
weight_decay: 0.01
improvement_threshold: 0.0025
annealing_factor: 0.9
patient: 1

# Tokenizer parameters
num_tokens: 29  # If token_type=char, must be equal to the number of found characters
token_type: char  # ["unigram", "bpe", "char"]
character_coverage: 1.0

# Codec parameters
sample_rate: 16000
vocab_size: 8192
num_codebooks: 2
token_rate: 50
semantic_vocab_size: 8192
ddim_sample_step: 50
mode: reconstruct

# Speaker encoder parameters
spk_dim: 512  # wavlm-base-sv

# Embedding parameters
embedding_dim: 1024
pretrain_embeddings: False  # If True, must match the codec's embedding size
freeze_embeddings: False

# Encoder-decoder parameters
dropout: 0.1
activation: !name:torch.nn.GELU
d_model: 256
nhead: 4
num_layers: 4
d_ffn: 2048
max_length: 5000
causal: False
injection_mode: cat

# Tokenizer
tokenizer_cls: !name:speechbrain.tokenizers.SentencePiece.SentencePiece
    model_dir: !ref <save_folder>
    vocab_size: !ref <num_tokens>
    annotation_train: !ref <train_csv>
    annotation_read: wrd
    model_type: !ref <token_type>
    character_coverage: !ref <character_coverage>

# Codec
codec: !new:audiocodecs.SemantiCodec
    sample_rate: !ref <sample_rate>
    token_rate: !ref <token_rate>
    semantic_vocab_size: !ref <semantic_vocab_size>
    ddim_sample_step: !ref <ddim_sample_step>
    mode: !ref <mode>

# Speaker encoder
spk_encoder: !new:models.speaker_encoder.WavLM
    model_hub: microsoft/wavlm-base-sv
    save_path: !ref <cache_folder>
    sample_rate: !ref <sample_rate>

# Modules
embedding: !new:torch.nn.Embedding
    embedding_dim: !ref <embedding_dim>
    num_embeddings: !ref <num_tokens>

encoder_decoder: !new:models.transformer.EncoderDecoderWithExtraEmbeddings
    input_size: !ref <embedding_dim>
    tgt_vocab: !ref <vocab_size> + 2  # +2 for BOS/EOS
    d_model: !ref <d_model>
    nhead: !ref <nhead>
    num_encoder_layers: !ref <num_layers>
    num_decoder_layers: 2
    d_ffn: !ref <d_ffn>
    dropout: !ref <dropout>
    activation: !ref <activation>
    max_length: !ref <max_length>
    encoder_module: conformer
    normalize_before: True
    causal: !ref <causal>
    injection_mode: !ref <injection_mode>

head: !new:torch.nn.Linear
    in_features: !ref <d_model>
    out_features: !ref <vocab_size> + 2  # +2 for BOS/EOS

spk_proj: !new:torch.nn.Linear
    in_features: !ref <spk_dim>
    out_features: !ref <d_model>

modules:
    embedding: !ref <embedding>
    encoder_decoder: !ref <encoder_decoder>
    head: !ref <head>
    spk_proj: !ref <spk_proj>

model: !new:torch.nn.ModuleList
    [[!ref <embedding>,
      !ref <encoder_decoder>,
      !ref <head>,
      !ref <spk_proj>,
    ]]

# Loss functions
ce_loss: !name:speechbrain.nnet.losses.nll_loss
    label_smoothing: 0.0
    allowed_len_diff: 0
    reduction: mean

# Optimizers
opt_class: !name:torch.optim.AdamW
    lr: !ref <lr>
    betas: (0.9, 0.98)
    eps: 1.e-8
    weight_decay: !ref <weight_decay>

# Schedulers
scheduler: !new:speechbrain.nnet.schedulers.NewBobScheduler
    initial_value: !ref <lr>
    improvement_threshold: !ref <improvement_threshold>
    annealing_factor: !ref <annealing_factor>
    patient: !ref <patient>

# Searchers
searcher: !new:speechbrain.decoders.S2STransformerGreedySearcher
    modules: [!ref <encoder_decoder>, !ref <head>]
    bos_index: !ref <bos_id>
    eos_index: !ref <eos_id>
    min_decode_ratio: 0.0
    max_decode_ratio: 1.0

# Performance metrics
utmos_computer: !name:metrics.utmos.UTMOS
    sample_rate: !ref <sample_rate>

dnsmos_computer: !name:metrics.dnsmos.DNSMOS
    sample_rate: !ref <sample_rate>

dwer_computer: !name:metrics.dwer.DWER
    model_hub: large-v3
    sample_rate: !ref <sample_rate>
    save_path: !ref <cache_folder>

wavlm_sim_computer: !name:metrics.speaker_similarity.SpkSimWavLM
    model_hub: microsoft/wavlm-base-sv
    sample_rate: !ref <sample_rate>
    save_path: !ref <cache_folder>

ecapatdnn_sim_computer: !name:metrics.speaker_similarity.SpkSimECAPATDNN
    model_hub: speechbrain/spkrec-ecapa-voxceleb
    sample_rate: !ref <sample_rate>
    save_path: !apply:os.path.join [!ref <cache_folder>, models--speechbrain--spkrec-ecapa-voxceleb]

# Counters, checkpointers, loggers, etc.
epoch_counter: !new:speechbrain.utils.epoch_loop.EpochCounter
    limit: !ref <num_epochs>

checkpointer: !new:speechbrain.utils.checkpoints.Checkpointer
    checkpoints_dir: !ref <save_folder>
    recoverables:
        model: !ref <model>
        scheduler: !ref <scheduler>
        counter: !ref <epoch_counter>

train_logger: !new:speechbrain.utils.train_logger.FileTrainLogger
    save_file: !ref <output_folder>/train_log.txt